/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#include "include/userDict"

castellatedMesh on;
snap            off;
addLayers       off;

geometry
{
    BASE.stl
    {
        type triSurfaceMesh;
        name BASE;
    }

    1H.stl
    {
        type triSurfaceMesh;
        name 1H;
    }

    R1
    {
        type    searchableBox;
        min     (
                    $/refinement/r1/min_x
                    $/refinement/r1/min_y
                    $/refinement/r1/min_z
                );
        max     (
                    $/refinement/r1/max_x
                    $/refinement/r1/max_y
                    $/refinement/r1/max_z
                );
    }

    R2
    {
        type    searchableBox;
        min     (
                    $/refinement/r2/min_x
                    $/refinement/r2/min_y
                    $/refinement/r2/min_z
                );
        max     (
                    $/refinement/r2/max_x
                    $/refinement/r2/max_y
                    $/refinement/r2/max_z
                );
    }

    R3
    {
        type    searchableBox;
        min     (
                    $/refinement/r3/min_x
                    $/refinement/r3/min_y
                    $/refinement/r3/min_z
                );
        max     (
                    $/refinement/r3/max_x
                    $/refinement/r3/max_y
                    $/refinement/r3/max_z
                );
    }
};

castellatedMeshControls
{
    maxLocalCells 100000;

    maxGlobalCells 2000000;

    minRefinementCells 10;

    maxLoadUnbalance 0.10;

    nCellsBetweenLevels 2;

    features
    (
      { file  "BASE.eMesh"; level 3; } 
      { file  "1H.eMesh"; level 3; } 
    );

    refinementSurfaces
    {
        BASE
        {
            level (3 3);
            name buildings;
            patchInfo
            {
                type wall;
                inGroups (walls);
            }
        }

        1H
        {
            level (3 3);
            name skyscraper;
            patchInfo
            {
                type wall;
                inGroups (walls);
            }
        }
    }    

    refinementRegions
    {
        R1
        {
            mode  inside;
            levels ((1E15 1));
        }

        R2
        {
            mode  inside;
            levels ((1E15 2));
        }

        R3
        {
            mode  inside;
            levels ((1E15 3));
        }

    }

    locationInMesh (0.0 0.0 0.7013);
    resolveFeatureAngle 10;
    allowFreeStandingZoneFaces true;

}

snapControls
{
    nSmoothPatch 5;

    // relative to cell size
    tolerance 0.8;

    //- Number of mesh displacement relaxation iterations.
    nSolveIter 30;

    //- Maximum number of snapping relaxation iterations. Should stop
    //  before upon reaching a correct mesh.
    nRelaxIter 5;

    // Feature snapping

        //- Number of feature edge snapping iterations.
        //  Leave out altogether to disable.
        nFeatureSnapIter 10;

        //- Detect (geometric only) features by sampling the surface
        //  (default=false).
        implicitFeatureSnap false;

        explicitFeatureSnap true;

        //(only for explicitFeatureSnap)
        multiRegionFeatureSnap false;


    }

addLayersControls
{
    layers
    {
        ground
        {
            nSurfaceLayers 4;
        }
        roof
        {
            nSurfaceLayers 5;
        }
        back
        {
            nSurfaceLayers 4;
        }
        side1
        {
            nSurfaceLayers 5;
        }
        side2
        {
            nSurfaceLayers 5;
        }
        back_building
        {
            nSurfaceLayers 4;
        }
        roof_building
        {
            nSurfaceLayers 5;
        }
        side1_building
        {
            nSurfaceLayers 5;
        }
        side2_building
        {
            nSurfaceLayers 5;
        }

    }

    relativeSizes       false;
    expansionRatio      1.45;
    firstLayerThickness 0.0008;
    minThickness        1e-6;

    // If points get not extruded do nGrow layers of connected faces that are
    // also not grown. This helps convergence of the layer addition process
    // close to features.
    // Note: changed(corrected) w.r.t 17x! (didn't do anything in 17x)
    nGrow 0;

    // Advanced settings

    // When not to extrude surface. 0 is flat surface, 90 is when two faces
    // are perpendicular
    featureAngle 270;

    // At non-patched sides allow mesh to slip if extrusion direction makes
    // angle larger than slipFeatureAngle.
    slipFeatureAngle 30;

    // Maximum number of snapping relaxation iterations. Should stop
    // before upon reaching a correct mesh.
    nRelaxIter 3;

    // Number of smoothing iterations of surface normals
    nSmoothSurfaceNormals 1;

    // Number of smoothing iterations of interior mesh movement direction
    nSmoothNormals 3;

    // Smooth layer thickness over surface patches
    nSmoothThickness 10;

    // Stop layer growth on highly warped cells
    maxFaceThicknessRatio 0.5;

    // Reduce layer growth where ratio thickness to medial
    // distance is large
    maxThicknessToMedialRatio 0.3;

    // Angle used to pick up medial axis points
    // Note: changed(corrected) w.r.t 17x! 90 degrees corresponds to 130 in 17x.
    minMedianAxisAngle 90;

    // Create buffer region for new layer terminations
    nBufferCellsNoExtrude 0;

    // Overall max number of layer addition iterations. The mesher will exit
    // if it reaches this number of iterations; possibly with an illegal
    // mesh.
    nLayerIter 50;


    // Max number of iterations after which relaxed meshQuality controls
    // get used. Up to nRelaxedIter it uses the settings in
    // meshQualityControls,
    // after nRelaxedIter it uses the values in
    // meshQualityControls::relaxed.
    nRelaxedIter 20;

}

meshQualityControls
{
    maxNonOrtho 65;
    maxBoundarySkewness 20;
    maxInternalSkewness 4;
    maxConcave 80;
    minVol 1e-13;
    minTetQuality 1e-15;
    minArea -1;
    minTwist 0.02;
    minDeterminant 0.001;
    minFaceWeight 0.05;
    minVolRatio 0.01;
    minTriangleTwist -1;
    nSmoothScale 4;
    errorReduction 0.75;
}
 
mergeTolerance 1e-6;

writeFlags
(
);

// ************************************************************************* //
