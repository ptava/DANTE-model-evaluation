/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// User parameters
cells_scaling 1.0;
building_ratio 2;

// Grading towards building
sr_building ((0.93 0.74 0.25) (0.07 0.36 0.30));
sr_building_front ((0.93 0.74 0.25) (0.07 0.36 0.07));

// Grading on Z
sr_ground_building ((0.1 0.25 25) (0.4 0.3 1.8) (0.4 0.3 0.7) (0.1 0.15 0.30)); 
sr_building_roof ((0.5 0.5 5) (0.5 0.5 0.2));
sr_ground ((0.1 0.30 20) (0.9 0.70 1.5));
sr_z1 ((0.1 0.30 10) (0.9 0.70 1.8));
sr_z2 1.8;
sr_z2_building 2.5;

// Grading on X
sr_in 0.60;
sr_in_up 0.8;
sr_in_up_up 1;
sr_in_boundary 0.75;
sr_wake_up ((0.65 0.8 1.3) (0.35 0.2 2));
sr_wake ((0.65 0.8 1.9) (0.35 0.2 2.2));
sr_wake_building ((0.65 0.8 1.6) (0.35 0.2 2.5));

// Grading on Y
sr_yLeft 0.5;
sr_yRight #calc "1/$sr_yLeft";
sr_yLeft_in 0.7;
sr_yRight_in #calc "1/$sr_yLeft_in";
sr_yLeft_out 0.8;
sr_yRight_out #calc "1/$sr_yLeft_out";
sr_yLeft_up 0.9;
sr_yRight_up #calc "1/$sr_yLeft_up";

// Parameters for vertices as a function of building height
building_height #calc "$building_ratio*0.08";
z1_height       #calc "$building_ratio*0.12";
z2_height       0.66;   
z_height        #calc "$z1_height+$z2_height";  // grid height changes to maintain 
                                                // same distance between building
                                                // roof and top boundary

// Cells number for varying scale parameter and building height
bl_cells        #calc "int( $cells_scaling*55 )";
z1              #calc "int( $building_ratio*$cells_scaling*40 )";
z2              #calc "int( $cells_scaling*80 )";
building        #calc "int( $cells_scaling*45 )";
y               #calc "int( $cells_scaling*65 )";
x1              #calc "int( $cells_scaling*50 )";
x2              #calc "int( $cells_scaling*125 )";

// O-grid vertices position on xy plane
xy_distance 0.09;
radius #calc "sqrt(2*pow($xy_distance,2))";

vertices
(
      ( -.456 -.550 0 )
      ( -0.12 -.55  0 )
      ( -0.12 -0.12 0 )
      ( -0.456 -0.12 0 )
      ( -.456 -.550 $z1_height )
      ( -0.12 -.55  $z1_height )
      ( -0.12 -0.12 $z1_height )
      ( -0.456 -0.12 $z1_height )
      ( 0.12 -0.55 0 )
      ( 0.12 -0.12 0 )
      ( 0.12 -0.55 $z1_height )
      ( 0.12 -0.12 $z1_height )
      ( 1.264 -0.55 0 )
      ( 1.264 -0.12 0 )
      ( 1.264 -0.55 $z1_height)
      ( 1.264 -0.12 $z1_height)
      ( -0.12 0.12 0 )
      ( -0.456 0.12 0 )
      ( -0.12 0.12 $z1_height )
      ( -0.456 0.12 $z1_height )
      ( 1.264 0.12 0 )
      ( 0.12 0.12 0 )
      ( 1.264 0.12 $z1_height )
      ( 0.12 0.12 $z1_height )
      ( -0.12 0.55 0 )
      ( -0.456 0.55 0 )
      ( -0.12 0.55 $z1_height )
      ( -0.456 0.55 $z1_height )
      ( 0.12 0.55 0 )
      ( 0.12 0.55 $z1_height )
      ( 1.264 0.55 0 )
      ( 1.264 0.55 $z1_height )
      ( -0.456 -0.55 $z_height )
      ( -0.14 -0.55 $z_height )
      ( -0.16 -0.16 $z_height )
      ( -0.456 -0.16 $z_height )
      ( 0.14 -0.55 $z_height )
      ( 0.16 -0.16 $z_height )
      ( 1.264 -0.55 $z_height )
      ( 1.264 -0.16 $z_height )
      ( -0.16 0.16 $z_height )
      ( -0.456 0.16 $z_height )
      ( 1.264 0.16 $z_height )
      ( 0.16 0.16 $z_height )
      ( -0.14 0.55 $z_height )
      ( -0.456 0.55 $z_height )
      ( 0.14 0.55 $z_height )
      ( 1.264 0.55 $z_height )
      ( -0.04 -0.04 0 )
      ( 0.04 -0.04 0 )
      ( 0.04  0.04 0 )
      ( -0.04 0.04 0 )
      ( -0.04 -0.04 $building_height )
      ( 0.04 -0.04 $building_height )
      ( 0.04  0.04 $building_height )
      ( -0.04 0.04 $building_height )
);

edges
(
    arc 9 21 ($radius 0 0)
    arc 11 23 ($radius 0 $z1_height)
    arc 2 16 (-$radius 0 0)
    arc 6 18 (-$radius 0 $z1_height)
    arc 2 9 (0 -$radius 0)
    arc 6 11 (0 -$radius $z1_height)
    arc 21 16 (0 $radius 0)
    arc 23 18 (0 $radius $z1_height)
);


blocks
(
	// Block 0
	hex (0 1 2 3 4 5 6 7)($x1 $y $z1) 
	edgeGrading (
        $sr_in_boundary $sr_in $sr_in_up $sr_in_up 
        $sr_yLeft_in $sr_yLeft $sr_yLeft $sr_yLeft_in
        $sr_z1 $sr_z1 $sr_ground $sr_z1 
    )

	// Block 1
	hex (1 8 9 2 5 10 11 6)($building $y $z1) 
	edgeGrading (
        1 1 1 1
        $sr_yLeft $sr_yLeft $sr_yLeft $sr_yLeft
        $sr_z1 $sr_z1 $sr_ground $sr_ground
    )

	// Block 2
	hex (8 12 13 9 10 14 15 11)($x2 $y $z1) 
	edgeGrading (
        $sr_wake $sr_wake_building $sr_wake_building $sr_wake
        $sr_yLeft $sr_yLeft_out $sr_yLeft_out $sr_yLeft
        $sr_z1 $sr_z1 $sr_z1 $sr_ground 
    )

	// Block 3
	hex (3 2 16 17 7 6 18 19)($x1 $building $z1) 
	edgeGrading (
        $sr_in $sr_in $sr_in_up $sr_in_up 
        1 1 1 1
        $sr_z1 $sr_ground $sr_ground $sr_z1 
    )

	// Block 4
	hex (9 13 20 21 11 15 22 23)($x2 $building $z1)
	edgeGrading (
        $sr_wake_building $sr_wake_building $sr_wake_building $sr_wake_building 
        1 1 1 1
        $sr_ground $sr_z1 $sr_z1 $sr_ground
    )

	// Block 5
	hex (17 16 24 25 19 18 26 27)($x1 $y $z1) 
	edgeGrading (
        $sr_in $sr_in_boundary $sr_in_up $sr_in_up 
        $sr_yRight_in $sr_yRight $sr_yRight $sr_yRight_in 
        $sr_z1 $sr_ground $sr_z1 $sr_z1
    )

	// Block 6
	hex (16 21 28 24 18 23 29 26)($building $y $z1) 
	edgeGrading (
        1 1 1 1
        $sr_yRight $sr_yRight $sr_yRight $sr_yRight
        $sr_ground $sr_ground $sr_z1 $sr_z1
    )

	// Block 7
	hex (21 20 30 28 23 22 31 29)($x2 $y $z1) 
	edgeGrading (
        $sr_wake_building $sr_wake $sr_wake $sr_wake_building 
        $sr_yRight $sr_yRight_out $sr_yRight_out $sr_yRight 
        $sr_ground $sr_z1 $sr_z1 $sr_z1 
    )

	// Block 8
	hex (4 5 6 7 32 33 34 35)($x1 $y $z2)
    edgeGrading (
        $sr_in_up $sr_in_up $sr_in_up_up $sr_in_up_up
        $sr_yLeft_in $sr_yLeft $sr_yLeft_up $sr_yLeft_up
        $sr_z2 $sr_z2 $sr_z2 $sr_z2
    )

	// Block 9
	hex (5 10 11 6 33 36 37 34)($building $y $z2) 
    edgeGrading (
        1 1 1 1
        $sr_yLeft $sr_yLeft $sr_yLeft_up $sr_yLeft_up
        $sr_z2 $sr_z2 $sr_z2_building $sr_z2
    )

	// Block 10
	hex (10 14 15 11 36 38 39 37)($x2 $y $z2) 
	edgeGrading (
        $sr_wake $sr_wake_building $sr_wake_up $sr_wake_up
        $sr_yLeft $sr_yLeft_out $sr_yLeft_up 
        $sr_yLeft_up $sr_z2 $sr_z2 $sr_z2 $sr_z2_building 
    )

	// Block 11
    hex (7 6 18 19 35 34 40 41)($x1 $building $z2) 
    edgeGrading (
        $sr_in_up $sr_in_up $sr_in_up_up $sr_in_up_up 
        1 1 1 1
        $sr_z2 $sr_z2 $sr_z2 $sr_z2 
    )

	// Block 12
	hex (11 15 22 23 37 39 42 43)($x2 $building $z2)
    edgeGrading (
        $sr_wake_building $sr_wake_building $sr_wake_up $sr_wake_up 
        1 1 1 1
        $sr_z2_building $sr_z2 $sr_z2 $sr_z2_building
    )

	// Block 13
	hex (19 18 26 27 41 40 44 45)($x1 $y $z2) 
	edgeGrading (
        $sr_in_up $sr_in_up $sr_in_up_up $sr_in_up_up 
        $sr_yRight_in $sr_yRight $sr_yRight_up $sr_yRight_up 
        $sr_z2 $sr_z2 $sr_z2 $sr_z2 
    )

    // Block 14
	hex (18 23 29 26 40 43 46 44)($building $y $z2) 
    edgeGrading (
        1 1 1 1 
        $sr_yRight $sr_yRight $sr_yRight_up $sr_yRight_up 
        $sr_z2 $sr_z2_building $sr_z2 $sr_z2 
    )

	// Block 15
	hex (23 22 31 29 43 42 47 46)($x2 $y $z2) 
    edgeGrading (
        $sr_wake_building $sr_wake $sr_wake_up $sr_wake_up 
        $sr_yRight $sr_yRight_out $sr_yRight_up $sr_yRight_up 
        $sr_z2_building $sr_z2 $sr_z2 $sr_z2 
    )
    // Block 16
	hex (6 11 23 18 34 37 43 40)($building $building $z2) 
	edgeGrading (
        1 1 1 1
        1 1 1 1
        $sr_z2 $sr_z2_building $sr_z2_building $sr_z2
    )

    // Block 17
	hex (9 49 48 2 11 53 52 6)($bl_cells $building $z1) 
    edgeGrading (
        $sr_building $sr_building_front $sr_building_front $sr_building 
        1  $sr_building_roof $sr_building_roof 1
        $sr_ground $sr_ground_building $sr_ground_building $sr_ground
	)

	// Block 18
	hex (16 2 48 51 18 6 52 55)($building $bl_cells $z1) 
	edgeGrading (
        1 $sr_building_roof $sr_building_roof 1 
        $sr_building_front $sr_building_front $sr_building_front $sr_building_front 
        $sr_ground $sr_ground $sr_ground_building $sr_ground_building
	)
	// Block 19
	hex (21 50 49 9 23 54 53 11)($bl_cells $building $z1) 
	edgeGrading (
        $sr_building $sr_building $sr_building $sr_building 
        1 $sr_building_roof $sr_building_roof 1
        $sr_ground $sr_ground_building $sr_ground_building $sr_ground
    )
	
    // Block 20
	hex (21 16 51 50 23 18 55 54)($building $bl_cells $z1) 
    edgeGrading (
        1 $sr_building_roof $sr_building_roof 1 
        $sr_building $sr_building_front $sr_building_front $sr_building
        $sr_ground $sr_ground $sr_ground_building $sr_ground_building
	)

	// Block 21
	hex (23 11 6 18 54 53 52 55)($building $building $bl_cells) 
	edgeGrading (
        1 1 $sr_building_roof $sr_building_roof 
        1 1 $sr_building_roof $sr_building_roof
        $sr_building $sr_building $sr_building_front $sr_building_front
	)
);


boundary
(
    inlet
    {
        type patch;
        faces
        (
             (0 4 7 3)
             (4 32 35 7)
             (7 35 41 19)
             (19 41 45 27)
             (17 19 27 25)
             (3 7 19 17)
        );
    }

    outlet
    {
        type patch;
        faces
        (
            (12 14 15 13)
            (14 38 39 15)
            (15 39 42 22)
            (22 42 47 31)
            (20 22 31 30)
            (13 15 22 20)
        );
    }

    top
    {
        type symmetry; // Approx: no influence of "top" to building influence region 
        inGroups 1(symmetry);
        faces
        (
            (32 33 34 35)
            (33 36 37 34)
            (36 38 39 37)
            (37 39 42 43)
            (43 42 47 46)
            (40 43 46 44)
            (41 40 44 45)
            (35 34 40 41)
            (34 37 43 40)
        );
    }

    ground
    {
        type wall;
        inGroups	1(walls);	
        faces
        (
            (0 1 2 3)
            (1 8 9 2)
            (8 12 13 9)
            (9 13 20 21)
            (21 20 30 28)
            (16 21 28 24)
            (17 16 24 25)
            (3 2 16 17)
            (2 48 51 16)
            (2 9 49 48)
            (9 21 50 49)
            (16 51 50 21)
        );
    }


    lateral1
    {
        type symmetry; // Approx: no influence of "lateral" to building influence region 
        inGroups 1(symmetry);
        faces
        (
            (0 1 5 4)
            (1 8 10 5)
            (8 12 14 10)
            (4 5 33 32)
            (5 10 36 33)
            (10 14 38 36)
        );
    }

    lateral2
    {
        type symmetry; // Approx: no influence of "lateral" to building influence region 
        inGroups 1(symmetry);
        faces
            (
                (25 27 26 24)
                (24 26 29 28)
                (29 31 30 28)
                (27 45 44 26)
                (26 44 46 29)
                (29 46 47 31)
            );
    }


    side1
    {
        type wall;
        inGroups	1(building);	
        faces
        (
            (48 52 53 49)
        );
    }

    side2
    {
        type wall;
        inGroups	1(building);	
        faces
        (
            (50 54 55 51)	 
        );
    }

    front
    {
        type wall;
        inGroups	1(building);	
        faces
        (
            (48 51 55 52)
        );
    }

    back
    {
        type wall;
        inGroups	1(building);	
        faces
        (
            (49 53 54 50)
        );
    }

    roof
    {
        type wall;
        inGroups	1(building);	
        faces
        (
            (52 55 54 53)
        );
    }
);

faceMatch
(
);

defaultPatches
{ 
    type wall;
}

// ************************************************************************* //
